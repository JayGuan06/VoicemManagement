#ifndef _MESSAGE_H
#define _MESSAGE_H
#endif

#include <iostream>
using namespace std;

typedef unsigned char byte;

const byte Command800head[] = { 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x20 };
const byte Command801head[] = { 0x00, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x21 };
const byte Result801head[] = { 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x03, 0x21 };
const byte Command802head[] = { 0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x22 };
const byte Command803head[] = { 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x23 };
const byte Command804head[] = { 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x24 };
const byte Command805head[] = { 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x25 };

const byte Command807head[] = { 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x27 };
const byte Command808head[] = { 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x28 };
const byte Command809head[] = { 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x29 };


void m800CInit();
void m801CInit(string stemp);//生成801消息
void m801RInit();
void m803CInit();
void m805CInit();

void m806CInit();
void m807CInit();
void Analysis(byte M[]);
byte M[1024];

void GetTime(char time[]);
